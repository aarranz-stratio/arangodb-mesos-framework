import "mesos/mesos.proto";

package arangodb;

// -----------------------------------------------------------------------------
// --SECTION--                                                            TARGET
// -----------------------------------------------------------------------------

message TargetEntry {
  required uint32 instances = 1;
  repeated mesos.Resource minimal_resources = 2;
  repeated mesos.Resource additional_resouces = 3;
  required uint32 number_ports = 4;
}



message Target {
  required string mode = 1;
  required TargetEntry agents = 2;
  required TargetEntry coordinators = 3;
  required TargetEntry dbservers = 4;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                              PLAN
// -----------------------------------------------------------------------------

message TasksPlanEntry {
  required bool is_primary = 1;
  optional mesos.SlaveID slave_id = 2;
  optional string persistence_id = 3;
}



message TasksPlan {
  repeated TasksPlanEntry entries = 1;
}



message Plan {
  required TasksPlan agents = 1;
  required TasksPlan coordinators = 2;
  required TasksPlan dbservers = 3;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                           CURRENT
// -----------------------------------------------------------------------------

enum ResourcesCurrentState {
  RESOURCE_STATE_UNKNOWN = 1;
  RESOURCE_STATE_REQUIRED = 2;
  RESOURCE_STATE_TRYING_TO_RESERVE = 3;
  RESOURCE_STATE_TRYING_TO_PERSIST = 4;
  RESOURCE_STATE_USEABLE = 5;
  RESOURCE_STATE_USED = 6;
  RESOURCE_STATE_LOST = 7;
}



message ResourcesCurrentEntry {
  optional ResourcesCurrentState state = 1 [default = RESOURCE_STATE_UNKNOWN];

  optional mesos.SlaveID slave_id = 2;
  optional mesos.OfferID offer_id = 3;
  repeated mesos.Resource resources = 4;
  repeated uint32 ports = 5;
  optional string hostname = 6;
  optional string container_path = 7;
}



message ResourcesCurrent {
  repeated ResourcesCurrentEntry entries = 1;
}



enum InstancesCurrentState {
  INSTANCE_STATE_UNUSED = 1;
  INSTANCE_STATE_STARTING = 2;
  INSTANCE_STATE_RUNNING = 3;
  INSTANCE_STATE_STOPPED = 4;
}



message InstancesCurrentEntry {
  optional InstancesCurrentState state = 1 [default = INSTANCE_STATE_UNUSED];

  optional mesos.TaskInfo task_info = 2;
  optional mesos.TaskStatus task_status = 3;

  repeated uint32 ports = 4;
  optional string hostname = 5;
}



message InstancesCurrent {
  repeated InstancesCurrentEntry entries = 1;
}



message Current {
  required ResourcesCurrent agency_resources = 1;
  required ResourcesCurrent coordinator_resources = 2;
  required ResourcesCurrent primary_dbserver_resources = 3;
  required ResourcesCurrent secondary_dbserver_resources = 4;

  required InstancesCurrent agents = 5;
  required InstancesCurrent coordinators = 6;
  required InstancesCurrent primary_dbservers = 7;
  required InstancesCurrent secondary_dbservers = 8;

  required bool             agency_initialized = 9;
  required bool             cluster_initialized = 10;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                             STATE
// -----------------------------------------------------------------------------

message State {
  optional mesos.FrameworkID framework_id = 1;
  required Target target = 2;
  required Plan plan = 3;
  required Current current = 4;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                       END-OF-FILE
// -----------------------------------------------------------------------------
