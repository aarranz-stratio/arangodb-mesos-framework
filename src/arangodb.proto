import "mesos/mesos.proto";

package arangodb;

// -----------------------------------------------------------------------------
// --SECTION--                                                            TARGET
// -----------------------------------------------------------------------------

message TargetEntry {
  required uint32 instances = 1;
  repeated mesos.Resource minimal_resources = 2;
  repeated mesos.Resource additional_resouces = 3;
  required uint32 number_ports = 4;
}



message Target {
  required TargetEntry agencies = 1;
  required TargetEntry coordinators = 2;
  required TargetEntry dbservers = 3;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                              PLAN
// -----------------------------------------------------------------------------

message OfferPlanEntry {
  optional mesos.SlaveID slave_id = 1;
  optional string persistence_id = 2;
}



message OfferPlan {
  repeated OfferPlanEntry entries = 1;
}



enum TasksPlanState {
  TASK_STATE_REQUIRED = 1;
  TASK_STATE_STARTED = 2;
  TASK_STATE_RUNNING = 3;
  TASK_STATE_KILLED = 4;
}



message TasksPlanEntry {
  required TasksPlanState state = 1;

  optional mesos.SlaveID slave_id = 2;
  optional mesos.TaskID task_id = 3;
}



message TasksPlan {
  repeated TasksPlanEntry entries = 1;
}



message Plan {
  required OfferPlan agency_offers = 1;
  required OfferPlan coordinator_offers = 2;
  required OfferPlan dbserver_offers = 3;

  required TasksPlan agencies = 4;
  required TasksPlan coordinators = 5;
  required TasksPlan primary_dbservers = 6;
  required TasksPlan secondary_dbservers = 7;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                           CURRENT
// -----------------------------------------------------------------------------

enum ResourcesCurrentState {
  RESOURCE_STATE_REQUIRED = 1;
  RESOURCE_STATE_TRYING_TO_RESERVE = 2;
  RESOURCE_STATE_TRYING_TO_PERSIST = 3;
  RESOURCE_STATE_USEABLE = 4;
  RESOURCE_STATE_LOST = 5;
}



message ResourcesCurrentEntry {
  required ResourcesCurrentState state = 1;

  required mesos.SlaveID slave_id = 2;
  required mesos.OfferID offer_id = 3;
  repeated mesos.Resource resources = 4;
  repeated uint32 ports = 5;
  required string hostname = 6;
  required string container_path = 7;
}



message ResourcesCurrent {
  repeated ResourcesCurrentEntry entries = 1;
}



enum InstancesCurrentState {
  INSTANCE_STATE_UNUSED = 1;
  INSTANCE_STATE_STARTING = 2;
}



message InstancesCurrentEntry {
  required InstancesCurrentState state = 1;

  required mesos.TaskInfo task_info = 2;
}



message InstancesCurrent {
  repeated InstancesCurrentEntry entries = 1;
}



message Current {
  required ResourcesCurrent agency_resources = 1;
  required ResourcesCurrent coordinator_resources = 2;
  required ResourcesCurrent dbserver_resources = 3;

  required InstancesCurrent agencies = 4;
  required InstancesCurrent coordinators = 5;
  required InstancesCurrent primary_dbservers = 6;
  required InstancesCurrent secondary_dbservers = 7;
}

// -----------------------------------------------------------------------------
// --SECTION--                                                       END-OF-FILE
// -----------------------------------------------------------------------------
